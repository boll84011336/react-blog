{"version":3,"sources":["utils.js","WebAPI.js","contexts.js","pages/LoginPage/LoginPage.js","components/Paginator/Paginator.js","pages/HomePage/HomePage.js","pages/ArticlePage/ArticlePage.js","pages/NewPostPage/NewPostPage.js","pages/RegisterPage/RegisterPage.js","components/Header/Header.js","components/App/App.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","login","username","password","fetch","method","headers","body","JSON","stringify","then","res","json","getMe","AuthContext","createContext","LoadingContext","Form","styled","form","Login","div","Input","input","ErrorMessage","LoginPage","setUser","useContext","useState","setUsername","setPassword","errorMessage","setErrorMessage","Navigate","useNavigate","onSubmit","e","data","ok","message","response","toString","console","log","value","onChange","target","type","className","Container","Button","button","Footer","Paginator","page","handlePageClick","onClick","Root","ContainerBody","PostContainer","PostTitle","Link","PostDate","p","Information","pStyle","paddingLeft","Post","post","to","id","title","style","user","nickname","Date","createdAt","toLocaleString","HomePage","posts","setPosts","totalPage","setTotalPage","setPage","totalPost","Number","length","Math","ceil","useEffect","getPagePosts","window","scrollTo","top","behavior","map","h3","PostOther","PostPeople","PostBody","Loading","onDelete","ArticlePage","setPost","isLoading","setIsLoading","navigate","useParams","getPost","catch","err","authorization","removePost","TitleInput","ContentTextarea","textarea","NewPostPage","setTitle","content","setContent","createPost","alert","rows","Register","setNickname","register","Banner","HeaderContainer","Brand","NavbarList","Nav","props","$active","LeftContainer","Header","location","useLocation","pathname","App","Provider","path","element","ReactDOM","render","theme","colors","primary_300","primary_400","primary_500","document","getElementById"],"mappings":"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","file":"static/js/main.e1f2ccba.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_expand=user&_sort=createdAt&_order=desc`)\n  .then((res) => res.json()\n  );\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}?_expand=user`).then((res) =>\n    res.json()\n  );\n};\n\nexport const removePost = (id) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n  }).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  })\n  .then(res => res.json())\n}\n\n\n//getMe 紀錄登入資訊\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      'authorization': `Bearer ${token}`\n    }\n  })\n  .then(res => res.json())\n}\n\n//POST \nexport const createPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n}\n\n//註冊\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\n//取得分頁\nexport const getPagePosts = (page) => {\n  return fetch(`${BASE_URL}/posts?_expand=user&_sort=createdAt&_order=desc&_page=${page}&_limit=5`)\n  .then((res) => res.json()\n  );\n};","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null)\nexport const LoadingContext = createContext(null);\nexport const PageContext = createContext(null);","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\n\nconst Form = styled.form`\npadding:20px;\ntext-align:center;\n\n`\n\nconst Login = styled.div`\nborder: 1px solid rgba(236, 109, 81, 0.5);\nwidth: 26%;\nmargin: 0px auto;\npadding:15px 1px;\nborder-radius: 5px\n`\n\nconst Input = styled.input`\n  height:30px;\n  padding: 5px;\n  margin: 16px 0;\n`;\n\nconst ErrorMessage = styled.div`\n  color:red\n`\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext)\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const Navigate = useNavigate()\n\n  const handleInputChange =(e) => {\n    setUsername(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    setErrorMessage(null)\n    login(username, password).then(data => {\n      if(data.ok === 0) {\n        return setErrorMessage(data.message)\n      }\n      setAuthToken(data.token)\n\n      getMe().then(response => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data)\n        console.log(response, \"回應\")\n        Navigate(\"/\");\n      })    \n    })\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Login>\n      <div>\n        username: {\" \"}\n        <Input value={username} onChange={handleInputChange}/>\n      </div>\n      <div>\n        password: {\" \"}\n        <Input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n      </div>\n      <button className=\"btn btn-outline-dark btn-sm\">登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </Login>\n    </Form>\n\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst Button = styled.button`\n  font-size: 8px;\n  border-radius: 5px;\n  padding: 12px;\n  background: transparent;\n  color: black;\n  border: 1px solid #00BFFF;\n  cursor: pointer;\n  &:active {\n    background: #00BFFF;\n  }\n  & + & {\n    margin-left: 10px;\n  }\n`;\n\nconst Footer = styled.div`\n  padding-top: 36px;\n`\n\n\n\nexport default function Paginator({ page, handlePageClick}) {\n  return (\n    <><Container>\n      <Button onClick={() => {handlePageClick(\"First\")}}>第一頁</Button>\n      <Button onClick={() => {handlePageClick(\"Prev\")}}>上一頁</Button>\n      {page}\n      <Button onClick={() => {handlePageClick(\"Next\")}}>下一頁</Button>\n      <Button onClick={() => {handlePageClick(\"Last\")}}>最末頁</Button>\n    </Container>\n    <Footer>    \n    </Footer></>\n  );\n}\n\n\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { Link } from \"react-router-dom\";\nimport { getPosts, getPagePosts } from \"../../WebAPI\";\nimport Paginator from \"../../components/Paginator\"\n// import { PageContext } from \"../../context\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst ContainerBody = styled.div`\n  \n  padding: 20px 40px 30px 40px;\n  max-width: 800px;\n  margin: 30px auto;\n  font-size: 20px;\n  @media screen and (max-width: 768px) {\n    margin: 100px auto;\n    overflow: hidden;\n  }\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n \n`;\n\nconst PostTitle = styled(Link)`\n  margin: 3px 20px;\n  font-size: 28px;\n  font-weight: 600;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.p`\n  color: rgba(0, 0, 0, 0.8);\n  margin-left: 10px;\n  font-size: 16px;\n`; \nconst Information = styled.div`\n  width: 700px; \n  display: flex;\n  align-items: center;\n  margin: 3px 30px;\n  padding-left: 5px;\n`\n\nconst pStyle = {\n  paddingLeft: \"10px\",\n}\n\nfunction Post({ post }) {\n  return (\n    <><ContainerBody>\n      <PostContainer>\n        <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>      \n      </PostContainer>\n      <Information>\n        <p>Posted by</p> <p style={pStyle}>{post.user.nickname}</p>\n        <p style={pStyle}>on</p><PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate> \n      </Information>\n    </ContainerBody></>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\n//這邊是我的首頁\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n  const [totalPage, setTotalPage] = useState(); //全部共有幾頁\n  const [page, setPage] = useState(1); //控制現在要去第幾頁 ， 當前頁數\n\n  getPosts().then((data) => {\n    const totalPost = Number(data.length); //總共幾筆\n    setTotalPage(Math.ceil(totalPost / 5)); //共幾頁\n  });\n\n  useEffect(() => { \n    getPagePosts(page).then(posts => {\n      setPosts(posts)\n    });\n    window.scrollTo({ \n      top: 0, \n      behavior: \"smooth\" \n    });\n  }, [page]);\n\n  const handlePageClick = (button) => {     \n      if (button === \"First\") {  \n        return setPage(1);\n      }\n\n      if (button === \"Prev\" && page > 1) {   \n        return setPage(page - 1);\n      }\n\n      if (button === \"Next\" && page < totalPage) {\n        return setPage(page + 1);\n      }\n\n      if (button === \"Last\") {\n        return setPage(totalPage);\n      }\n  };\n  // useEffect(() => {\n  //   getPosts().then((posts) => {\n  //     setPosts(posts)\n  //   });\n  // }, []);\n\n  return (\n    <Root>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n      <Paginator page={page} handlePageClick={handlePageClick}/>\n    </Root>\n  );\n}\n\n","import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { AuthContext } from \"../../contexts\";\nimport { useParams, useNavigate  } from \"react-router-dom\";\nimport { getPost, removePost } from \"../../WebAPI\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n`;\n\nconst PostTitle = styled.h3`\n  text-align:center;\n  font-weight: 500;\n  font-family: cursive;\n`;\n\nconst PostOther = styled.div`\n  text-align:center;\n`\n\nconst PostPeople = styled.p`\n  margin-right:12px;\n  display:inline;;\n  font-weight: 600;\n  color: cadetblue;\n  font-family: 'Lora', 'Times New Roman', serif;\n  font-style: italic;\n`\n\nconst PostDate = styled.div`\n  font-size: 14px;\n  color: #127436;\n  font-style: oblique;\n  display:inline;\n`;\n\nconst PostBody = styled.p`\n  white-space: pre-wrap;\n  text-align:left;\n  margin-top: 20px;\n`;\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: black;\n  font-size: 24px;\n  background: rgba(0, 0, 0, 0.3);\n`;\n\n\n\nfunction Post({ post, onDelete }) {\n  const { user } = useContext(AuthContext);\n\n  if (!post) return null;\n \n  return (    \n    <PostContainer>\n      <PostTitle>{post.title}</PostTitle>\n      <PostOther>\n        <PostPeople>Posted by {post.user.nickname} on</PostPeople>\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n        <PostBody>{post.body}</PostBody>             \n        {user && user.nickname ===  post.user.nickname ? <button className=\"btn btn-dark btn-sm\" onClick={onDelete}>刪除</button> : ''}    \n      </PostOther>    \n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function ArticlePage() {\n  const [post, setPost] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const { id } = useParams();\n  \n  const handleDelete = () => {   \n    removePost(id).then(() => {\n      navigate('/');\n    });    \n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPost(id)\n      .then((post) => {\n        setIsLoading(false);\n        setPost(post);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n      });\n  }, [id]);\n \n  return (\n    <Root>\n      <Post post={post} onDelete={handleDelete} />\n      {isLoading && <Loading>載入中</Loading>}\n    </Root>\n  );\n}","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport {createPost} from \"../../WebAPI\";\n\n\nconst Form = styled.form`\n  border: solid 3px black;\n  padding: 20px 40px 60px 40px;\n  max-width: 800px;\n  margin: 30px auto;\n  font-size: 20px;\n  @media screen and (max-width: 768px) {\n    margin: 100px auto;\n    overflow: hidden;\n  }\n`;\n\nconst TitleInput = styled.input`\n  margin-bottom: 12px;\n  width: 100%;\n  font-size: 16px;\n  padding: 10px;\n`;\n\nconst ContentTextarea = styled.textarea`\n  width: 100%;\n  font-size: 16px;\n  padding: 12px;\n`;\n\n\nconst Button = styled.button`\n  padding: 12px;\n  background: #ff8100;\n  color: white;\n  border: solid 1px #ff8100;\n  cursor: pointer;\n  float: right;\n  &:hover {\n    background: #ff8100;\n  }\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nexport default function NewPostPage() {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const Navigate = useNavigate()\n\n  //新增文章\n  const handleSubmit = (e) => {\n    createPost(title, content).then(data => {\n      if(data.ok === 0) {       \n        return alert(\"請輸入標題及內文\")\n      }\n      if (data.id) {\n        Navigate(\"/\");\n      }     \n    })\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      Title:{\" \"}<TitleInput value={title} onChange={(e) => setTitle(e.target.value)} />\n      Content:{\" \"}<ContentTextarea rows=\"20\" value={content} onChange={(e) => setContent(e.target.value)} />\n      <Button>submit</Button>\n    </Form>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { login, getMe, register} from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\n\n\nconst Form = styled.form`\nmargin:0px auto;\npadding:20px;\ntext-align:center;\n`\n\nconst Input = styled.input`\n  height:26px;\n  padding: 5px;\n  margin: 16px 0;\n`;\n\nconst ErrorMessage = styled.div`\n  color:red\n`\n\nconst Register = styled.div`\nborder: 1px solid rgba(236, 109, 81, 0.5);\nwidth: 26%;\nmargin: 0px auto;\npadding:15px 1px;\nborder-radius: 5px\n`\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext)\n\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"Lidemy\");\n  const [errorMessage, setErrorMessage] = useState();\n  const Navigate = useNavigate()\n\n\n  const handleSubmit = (e) => {\n    setErrorMessage(null)\n    register(nickname, username, password).then(data => {\n      console.log(data)\n      if(data.ok === 0) {\n        return setErrorMessage(data.message)\n      }\n      login(username, password).then(data => {\n        if(data.ok === 0) {\n          return setErrorMessage(data.message)\n        }\n        setAuthToken(data.token)\n  \n        getMe().then(response => {\n          if (response.ok !== 1) {\n            setAuthToken(null);\n            return setErrorMessage(response.toString());\n          }\n          setUser(response.data)\n          Navigate(\"/\");\n        })    \n      })\n    })\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Register>\n        <div>\n          nickname: {\" \"}\n          <Input value={nickname} onChange={(e) => setNickname(e.target.value)}/>\n        </div>\n        <div>\n          username: {\" \"}\n          <Input value={username} onChange={(e) => setUsername(e.target.value)}/>\n        </div>\n        <div>\n          password: {\" \"}\n          <Input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n        </div>\n        <button className=\"btn btn-outline-dark btn-sm\">註冊</button>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </Register>\n    </Form>\n  );\n}\n\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\"\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport { Link, useNavigate, useLocation} from \"react-router-dom\";\n\nconst Banner = styled.div``\n\nconst HeaderContainer = styled.div`\n  height: 80px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding:0px 32px;\n  box-sizing: border-box;\n  background:\t#F5F5F5;\n`;\n\nconst Brand = styled.div`\nfont-style:oblique;\nfont-size:32px;\nfont-weight: bold;\ncolor:red;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 80px;\n`;\n\nconst Nav = styled(Link)` \n  font-size: 20px;\n  font-weight: 600;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n  ${(props) =>\n    props.$active &&\n    `\n    background: \t#B0C4DE;\n  `} \n`\n\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\n\nexport default function Header() {\n  const { isLoading } = useContext(LoadingContext);\n  const location = useLocation()\n  const Navigate = useNavigate()\n  const { user, setUser } = useContext(AuthContext)\n\n  const handleLogout = () => {\n    setAuthToken('');\n    setUser(null);\n    Navigate(\"/\");\n  }\n\n  return (\n    <><HeaderContainer className=\"navbar fixed-top navbar-light\">\n      <LeftContainer>\n        <Brand to=\"/\">Blog</Brand>\n        <NavbarList className=\"navbar-fixed-top\">\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>首頁</Nav>\n          {user && <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>發布文章</Nav>}\n        </NavbarList>\n      </LeftContainer>\n      {!isLoading && (\n        <NavbarList className=\"navbar-fixed-top\">\n          {!user && <Nav to={\"/register\"} $active={location.pathname === \"/register\"}>註冊</Nav>}\n          {!user && <Nav to=\"/login\" $active={location.pathname === \"/login\"}>登入</Nav>}\n          {user && <Nav to=\"/login\" onClick={handleLogout}>登出</Nav>}\n        </NavbarList>\n      )}\n    </HeaderContainer>\n    <Banner>\n    <div className=\"top-banner\">\n      <div className=\"top-banner__info\">\n        <h1 className=\"top-banner__sub-title\">WELCOME TO MY BLOG</h1>\n      </div>\n    </div>\n    </Banner></>\n    \n    \n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { HashRouter as Router, Routes, Route} from \"react-router-dom\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport HomePage from \"../../pages/HomePage\";\nimport ArticlePage from \"../../pages/ArticlePage\";\nimport NewPostPage from \"../../pages/NewPostPage\";\nimport RegisterPage from \"../../pages/RegisterPage\";\nimport Header from \"../Header\";\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport { getMe } from \"../../WebAPI\";\nimport { getAuthToken } from \"../../utils\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  \n  useEffect(() => {\n    if (getAuthToken()) {\n      getMe().then((response) => {\n        setIsLoading(false);\n        if (response.ok) {\n          setUser(response.data);\n          setIsLoading(false)\n        }\n      });\n    } else {\n      setIsLoading(false);\n    }\n  },[]);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\n      <Root>\n        <Router>\n          <Header />\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/register\" element={<RegisterPage />} />\n            <Route path=\"/posts/:id\" element={<ArticlePage />}></Route>\n            <Route path=\"/new-post\" element={<NewPostPage />}></Route>\n          </Routes>\n        </Router>\n      </Root>\n      </LoadingContext.Provider>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    primary_300: \"#3333dd\",\n    primary_400: \"#e33e3e\",\n    primary_500: \"#af0505\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}